{"ast":null,"code":"import React from 'react';\nimport './App.css';\nimport Main from './Main';\nimport data from './questions.json';\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      questions: null\n    };\n  }\n\n  async componentDidMount() {\n    //const url = \"questions.json\";\n    //const url = \"https://api.randomuser.me/\";\n    //const response = await fetch('./project/aptitude-test/questions.json');\n    //const data = await response.json();    \n    console.log(newdata); //this.setState({ questions: data.data[0], loading: false})\n  }\n\n  render() {\n    const newdata = data.map(data => {});\n  }\n\n}","map":{"version":3,"sources":["D:/project/aptitude-test/src/App.js"],"names":["React","Main","data","App","Component","constructor","state","loading","questions","componentDidMount","console","log","newdata","render","map"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,eAAe,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AACD,QAAMC,iBAAN,GAA0B;AACxB;AACA;AACA;AAEA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ,EANwB,CAOxB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMD,OAAO,GAAGV,IAAI,CAACY,GAAL,CAAUZ,IAAD,IAAS,CAAE,CAApB,CAAhB;AAED;;AArB8C","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Main from './Main';\nimport data from './questions.json'\n\nexport default class App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      loading: true,\n      questions: null\n    }\n  }\n  async componentDidMount() {\n    //const url = \"questions.json\";\n    //const url = \"https://api.randomuser.me/\";\n    //const response = await fetch('./project/aptitude-test/questions.json');\n    \n    //const data = await response.json();    \n    console.log(newdata);\n    //this.setState({ questions: data.data[0], loading: false})\n  }\n\n  render() {\n    const newdata = data.map((data) =>{});\n    \n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}